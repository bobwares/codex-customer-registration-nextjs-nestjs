-- App: Customer Registration
-- Package: db
-- File: 01_customer_domain.sql
-- Version: 0.1.0
-- Author: AI Agent
-- Date: 2025-09-25T19:45:00Z
-- Description: Creates the customer_domain schema, normalized tables, indexes, and a flattened reporting view.
--
BEGIN;

CREATE SCHEMA IF NOT EXISTS customer_domain;

SET search_path TO customer_domain, public;

CREATE TABLE IF NOT EXISTS postal_address (
    address_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    line1 VARCHAR(255) NOT NULL,
    line2 VARCHAR(255),
    city VARCHAR(120) NOT NULL,
    state VARCHAR(80) NOT NULL,
    postal_code VARCHAR(20) NOT NULL,
    country CHAR(2) NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS privacy_settings (
    privacy_settings_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    marketing_emails_enabled BOOLEAN NOT NULL,
    two_factor_enabled BOOLEAN NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS customer (
    customer_id UUID PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    first_name VARCHAR(120) NOT NULL,
    middle_name VARCHAR(120),
    last_name VARCHAR(120) NOT NULL,
    email VARCHAR(255) NOT NULL,
    address_id BIGINT REFERENCES postal_address(address_id) ON DELETE SET NULL,
    privacy_settings_id BIGINT REFERENCES privacy_settings(privacy_settings_id) ON DELETE SET NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    CONSTRAINT uq_customer_email UNIQUE (email)
);

CREATE INDEX IF NOT EXISTS idx_customer_address_id
    ON customer (address_id);

CREATE INDEX IF NOT EXISTS idx_customer_privacy_settings_id
    ON customer (privacy_settings_id);

CREATE TABLE IF NOT EXISTS customer_email (
    email_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_id UUID NOT NULL REFERENCES customer(customer_id) ON DELETE CASCADE,
    email VARCHAR(255) NOT NULL,
    is_primary BOOLEAN NOT NULL DEFAULT FALSE,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    CONSTRAINT uq_customer_email_address UNIQUE (customer_id, email)
);

CREATE INDEX IF NOT EXISTS idx_customer_email_customer_id
    ON customer_email (customer_id);

CREATE TABLE IF NOT EXISTS customer_phone_number (
    phone_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_id UUID NOT NULL REFERENCES customer(customer_id) ON DELETE CASCADE,
    type VARCHAR(20) NOT NULL,
    number VARCHAR(20) NOT NULL,
    extension VARCHAR(10),
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    CONSTRAINT uq_customer_phone UNIQUE (customer_id, type, number)
);

CREATE INDEX IF NOT EXISTS idx_customer_phone_customer_id
    ON customer_phone_number (customer_id);

CREATE OR REPLACE VIEW customer_profile_view AS
SELECT
    c.customer_id,
    c.name,
    c.first_name,
    c.middle_name,
    c.last_name,
    c.email,
    pa.line1,
    pa.line2,
    pa.city,
    pa.state,
    pa.postal_code,
    pa.country,
    ps.marketing_emails_enabled,
    ps.two_factor_enabled
FROM customer c
LEFT JOIN postal_address pa ON pa.address_id = c.address_id
LEFT JOIN privacy_settings ps ON ps.privacy_settings_id = c.privacy_settings_id;

COMMENT ON VIEW customer_profile_view IS 'Flattened customer profile spanning identity, contact, address, and privacy preferences.';

COMMIT;

-- Smoke test: SELECT COUNT(*) FROM customer_domain.customer;
-- Smoke test: SELECT COUNT(*) FROM customer_domain.customer_profile_view;
